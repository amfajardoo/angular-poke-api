/* eslint-disable @typescript-eslint/no-var-requires */
/* eslint-disable @typescript-eslint/ban-ts-comment */
/* tslint:disable */
// @ts-nocheck
const { writeFile, existsSync, mkdirSync } = require('fs');
require('dotenv').config();

function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== '') {
      console.log(`wrote variables to ${targetPath}`);
    }
  });
}

// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}
// list of environments
const environments = ['', '.prod'];
// choose the correct targetPath based on the environment chosen
const targetPath = './src/environments/environment';
environments.forEach((env) => {
  const ENV = env === '' ? 'dev' : env.replace('.', '');
  // creates the `environment.*.ts` and `environment.ts` file if it does not exist
  writeFileUsingFS(`${targetPath}${env}.ts`, '');
  //actual content to be compiled dynamically and pasted into respective environment files
  const environmentFileContent = `
    // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
    export const environment = {
      ENV: '${ENV}',
      POKE_URI: '${process.env.POKE_URI}',
      SUPABASE_URL: '${process.env.SUPABASE_URL}',
      SUPABASE_KEY: '${process.env.SUPABASE_KEY}',
    };
  `;
  // appending data into the target file
  writeFileUsingFS(`${targetPath}${env}.ts`, environmentFileContent);
});

/* tslint:enable */
